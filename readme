Name: Richard Lum


Testing on ubc machines currenlty shows 2 failures with demo client
(downloaded version 20130121).

It appears that client side is causing itself to fail 2.2. 
TEST 2.2: ERROR... exit command didn't close connection -1
I think client generates a sigpipe and is getting the -1 locally.
I modified the server to emit -1 on the third bad element as well as
without and 2.2 always reports receivne -1.  
Replacing sampleclient.py code line 178
from sock.sendall("xyz")
to   sock.sendall("xyz",socket.MSG_NOSIGNAL)
allows the test to pass.


On test set 3, I note that results can change with different runs
and tracing through the server program shows that it is a timing
of when clients are started/ended vs other clients requesting load.
The load number is consistent with the order of opertions seen
by the server but the client does not appear to have any firm
visibility of when a load is actually issued relative to when other
clients have completed starting up or exiting.


References:
http://www.opussoftware.com/tutorial/TutMakefile.htm
http://beej.us/guide/bgnet/output/print/bgnet_A4.pdf
http://www.yolinux.com/TUTORIALS/LinuxTutorialPosixThreads.html


test results: (without fixing 2.2 client script)
------------------------------------

==========
TEST 1
==========
TEST 1.2: OK... Reasonable, difference is 1 seconds
TEST 1.3: OK... Correctly received a load of 1
TEST 1.3: OK... Correctly received a load of 1
TEST 1.4: OK... Correctly received exit code of 0
TEST 1.4: OK... receive timed out; connection is correctly closed

==========
TEST 2
==========
TEST 2.1: OK... Correctly received return code of -1
TEST 2.1: OK... Correctly received return code of -1
TEST 2.1: OK... Correctly received return code of -1
TEST 2.1: OK... Correctly timed out
TEST 2.2: ERROR... exit command didn't close connection -1
TEST 2.3: OK... Correctly received return code of -1
TEST 2.3: OK... Correctly received load of 1
TEST 2.3: OK... Correctly received return code of -1
TEST 2.3.1: OK... -1 returned for invalid request
TEST 2.3.2: OK... -1 returned for invalid request
TEST 2.3: OK... receive timed out; connection is correctly closed
TEST 2.4: OK... receive timed out; connection is correctly closed
TEST 2.5: OK... Received all the correct return codes
TEST 2.6: OK... Correctly received a non-negative uptime
TEST 2.6: OK... 'e' wasn't double-counted
TEST 2.7: receive timed out
TEST 2.7: OK... first x correctly received -1 return value
TEST 2.7: OK... value for l wasn't sent back
TEST 2.7: OK... first x after l correctly received -1 return value
TEST 2.7: OK... second x after l correctly received -1 return value
TEST 2.7: OK... connection is correctly closed after xlxx

==========
TEST 3
==========
TEST 3.1: ERROR... load returned 2 instead of 3
TEST 3.2: OK... Correctly exited
TEST 3.2: OK... Correctly received a load of 2
TEST 3.2: OK... Correctly exited
TEST 3.2: OK... Correctly received a load of 1
TEST 3.3: OK... Correctly exited
TEST 3.3: OK... All live connections are synchronized, reporting the same load

Press any key to exit...

